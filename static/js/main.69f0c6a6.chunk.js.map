{"version":3,"sources":["Result.js","Bowl.js","Bat.js","App.js","reportWebVitals.js","index.js"],"names":["Result","props","useState","first","useContext","finaltotal","second","total","className","style","display","createContext","Bowl","playertot","balls","setBalls","runs","setRuns","status","setStatus","setTotal","length","reduce","prev","curr","color","onClick","console","log","Math","floor","random","Provider","value","Bat","App","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAqBeA,EAlBA,SAACC,GAEZ,MAAkBC,mBAAS,IAA3B,mBAEMC,GAFN,UAEYC,qBAAWC,IACjBC,EAAOL,EAAMM,MAGrB,OACE,qBAAKC,UAAU,SAAf,SACI,oBACIC,MAAO,CAACC,QAASJ,EAAO,EAAE,QAAQ,UADtC,SAEKH,EAAMG,EAAS,YAAc,oBCX7BD,EAAWM,0BAwDTC,EAtDF,SAACX,GACV,IAAMY,EAAWZ,EAAMM,MACvB,EAAsBL,mBAAS,MAA/B,mBAAMY,EAAN,KAAYC,EAAZ,KACA,EAAoBb,mBAAS,IAA7B,mBAAMc,EAAN,KAAWC,EAAX,KACA,EAAwBf,mBAAS,IAAjC,mBAAMgB,EAAN,KAAaC,EAAb,KACA,EAAsBjB,mBAAS,IAA/B,mBAAMK,EAAN,KAAYa,EAAZ,KACA,EAAwBlB,mBAAS,IAAjC,6BA4BF,OAEE,sBAAKM,UAAU,OAAf,UACI,8CACA,0CAAaM,KACb,0CAA0B,GAAbE,EAAKK,OACZ,cACFL,EAAKM,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAKC,QAEjC,oBAAIf,MAAO,CAACgB,MAAM,QAAlB,SAA6BP,IAC7B,qDAAsBL,EAAUN,EAAhC,kBACD,wBAAQmB,QArCD,WAEG,GAAPZ,GACCK,EAAU,uBACVQ,QAAQC,IAAIZ,GACZI,EAASJ,EAAKM,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAKC,QAIvCT,EAASD,EAAM,GACfG,EAAQ,GAAD,mBAAKD,GAAL,CAAUa,KAAKC,MAAoB,EAAdD,KAAKE,UAAa,KAC9CJ,QAAQC,IAAIZ,GAERG,EADDZ,EAAMM,EACK,UAEA,MAsBlB,kBACA,cAACR,EAAW2B,SAAZ,CAAqBC,MAAOpB,EAA5B,SACA,cAAC,EAAD,CAAQN,MAAOA,UCPR2B,EAxCH,SAACjC,GACT,MAAsBC,mBAAS,MAA/B,mBAAMY,EAAN,KAAYC,EAAZ,KACA,EAAoBb,mBAAS,IAA7B,mBAAMc,EAAN,KAAWC,EAAX,KACA,EAAwBf,mBAAS,IAAjC,mBAAaiB,GAAb,WACA,EAAsBjB,mBAAS,IAA/B,mBAAMK,EAAN,KAAYa,EAAZ,KAiBF,OACE,sBAAKZ,UAAU,MAAf,UACA,2CACG,sBAAKA,UAAU,KAAf,UACA,2CAAcM,KACd,2CAA2B,GAAbE,EAAKK,OACH,UACHL,EAAKM,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAKC,QAE1C,uDAA0BjB,EAAM,EAAIA,EAAO,iBAC3C,wBAAQmB,QAzBD,WAEG,GAAPZ,GACCK,EAAU,sBACVQ,QAAQC,IAAIZ,GACZI,EAASJ,EAAKM,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAKC,KAAO,KAE9CT,EAASD,EAAM,GACfG,EAAQ,GAAD,mBAAKD,GAAL,CAAUa,KAAKC,MAAoB,EAAdD,KAAKE,UAAa,KAC9CJ,QAAQC,IAAIZ,KAgBhB,kBAEA,cAAC,EAAD,CAAMT,MAAOA,WC1BN4B,MATf,WACE,OACE,sBAAK3B,UAAU,MAAf,UACE,oBAAIC,MAAO,CAACgB,MAAM,SAASW,OAAO,QAAlC,4BACA,cAAC,EAAD,QCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.69f0c6a6.chunk.js","sourcesContent":["import React,{useContext,useState} from 'react';\r\nimport {finaltotal} from './Bowl.js';\r\n\r\nconst Result = (props) => {\r\n    \r\n    const[win,setWin]=useState('');\r\n\r\n    const first=useContext(finaltotal);\r\n    const second=props.total;\r\n\r\n  \r\n  return (\r\n    <div className=\"result\">\r\n        <h2 \r\n            style={{display:(second>0?\"block\":\"hidden\")}}>\r\n            {first>second ? 'human won' : \"computer won\"}\r\n        </h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Result;","import React,{useState,createContext} from 'react';\r\nimport Result from './Result.js';\r\nimport './App.css';\r\n\r\nexport const finaltotal=createContext();\r\n\r\nconst Bowl = (props) => {\r\n    const playertot=(props.total);\r\n    const[balls,setBalls]=useState('12');\r\n    const[runs,setRuns]=useState([]);\r\n    const[status,setStatus]=useState([]);\r\n    const[total,setTotal]=useState('');\r\n    const[result,setResult]=useState('');\r\n\r\n    const batt=()=>{\r\n        \r\n        if(balls==0){\r\n            setStatus('no balls remaining ');\r\n            console.log(runs);\r\n            setTotal(runs.reduce((prev,curr)=>prev+curr))\r\n            \r\n                      \r\n        }else{\r\n            setBalls(balls-1);\r\n            setRuns([...runs,Math.floor(Math.random()*6)+ 1])\r\n            console.log(runs);\r\n            if(total>playertot){\r\n                setStatus(\"you won\")\r\n            }else{\r\n                setStatus(\"\")\r\n            }\r\n           \r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"Ball\">\r\n        <h1>Defend total</h1>\r\n        <h3>Balls : {balls}</h3>\r\n        <h3>Total : {runs.length==0 \r\n            ? \"no runs yet\" :\r\n            runs.reduce((prev,curr)=>prev+curr)}\r\n            </h3>\r\n         <h3 style={{color:'blue'}} >{status}</h3>  \r\n         <h5>{`computer need ${playertot-total} runs to win`}</h5>\r\n        <button onClick={batt}>Ball</button>\r\n        <finaltotal.Provider value={playertot}>\r\n        <Result total={total}/>\r\n        </finaltotal.Provider>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bowl;","import React,{useState} from 'react';\r\nimport './App.css';\r\n\r\nimport Bowl from './Bowl.js';\r\n\r\n\r\nconst Bat = (props) => {\r\n    const[balls,setBalls]=useState('12');\r\n    const[runs,setRuns]=useState([]);\r\n    const[status,setStatus]=useState('');\r\n    const[total,setTotal]=useState('');\r\n\r\n    const batt=()=>{\r\n        \r\n        if(balls==0){\r\n            setStatus('no balls remaining');\r\n            console.log(runs);\r\n            setTotal(runs.reduce((prev,curr)=>prev+curr)+ 1)\r\n        }else{\r\n            setBalls(balls-1);\r\n            setRuns([...runs,Math.floor(Math.random()*6)+ 1])  \r\n            console.log(runs);\r\n        }\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"Bat\">\r\n    <h1>Bat first</h1>\r\n       <div className=\"bt\">\r\n       <h3>Balls :  {balls}</h3>\r\n       <h3>Total :  {runs.length==0 \r\n                     ? \"no runs\" :\r\n                    runs.reduce((prev,curr)=>prev+curr)}</h3>\r\n               \r\n        <h3>final total to win : {total>0 ? total :'no runs yet'}</h3>\r\n        <button onClick={batt}>Batt</button>\r\n        \r\n        <Bowl total={total}/>\r\n        \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bat;","\nimport './App.css';\nimport Bat from './Bat.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 style={{color:'orange',margin:'20px'}}>Play - cricket</h1>\n      <Bat/>\n     </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}